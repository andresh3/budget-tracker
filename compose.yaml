services:
  react:
    container_name: react 
    build: app 
    networks:
      - frontend
    volumes:
      - ./app/src:/usr/src/app/src              # Defining our source code and public files as a volume allows
      - ./app/public:/usr/src/app/public        # use to work on them live and have them update.

  express:
    container_name: express
    build: api
    networks:
      - backend                                 # The API server should be the only one that can operate on
      - frontend                                # Both the front-end and back-end networks.
    volumes:
      - ./api/src:/usr/src/app/src
    depends_on:
      - budget_db

  budget_db:
    image: mysql:8.0
    container_name: budget_db
    ports:
      - 3308:3306                               # DEVELOPMENT ONLY
    environment:
      MYSQL_ROOT_PASSWORD: DEVELOPMENT          # DEVELOPMENT ONLY
      MYSQL_DATABASE: budget_tracker 
    networks:
      - backend 
    volumes:
      - budget_db:/var/lib/mysql
      - ./db-init:/docker-entrypoint-initdb.d
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - "3000:80"                             # PORT 3000 is only for dev
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/usr/share/nginx/html
    depends_on:
      - react 
    restart: always
    networks:
      - frontend
volumes:
  budget_db:
networks:
  frontend:
  backend:
